service: app-serverless-js
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  # 後付でapi getewayをアタッチ
  # RootResourceId
  apiGateway:
    restApiId: d3cicc9go7
    restApiRootResourceId: 3pfq18
# you can overwrite defaults here
  stage: dev
  region: ap-northeast-1

# AWS Lambda Functions
functions:
  hello:
    handler: handler.call
    # Default {service}-{stage}-{function}
    name: lambdaName
    memorySize: 512
    timeout: 30
    events:
      - http:
          path: /getlist
          method: get
    package:
      exclude:
        - node_modules/**
        - package.json
        - package-lock.json
        - yarn.lock
      include:
        - ./handler.js
      individually: true
    layers:
      - {Ref: NodemodulesLambdaLayer}
    environment:
      DB_DATABASE: test1
    vpc:
      securityGroupIds:
        - sg-08df50da236840a1f
      subnetIds:
        - subnet-01cc8e16e1aceaa5c
        - subnet-06268e3ae7eac0a4e
    # Tags that will be added to each of the deployment resources
    tags:
      key1: value1
      key2: value2

# AWS Lambda Layers
layers:
  nodemodules:
    # path: ./node_modules
    path: layer
    name: ${self:service}-node_modules
    description: This is node node_modules
    compatibleRuntimes:
      - nodejs14.x
    allowedAccounts:
      - '*'
